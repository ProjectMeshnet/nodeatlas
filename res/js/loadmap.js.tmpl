var options = {
	"tileserver": "{{.Map.Tileserver}}",
	"center": new L.LatLng({{.Map.Center.Latitude}},
						   {{.Map.Center.Longitude}}),
	"zoom": {{.Map.Zoom}}
}

var firstLoad = true;
var attribution = '<a href="https://github.com/ProjectMeshnet/nodeatlas">NodeAtlas {{.Version}}</a> â€” Map data {{.Map.Attribution}}';
var nodelayer = new L.MarkerClusterGroup({
	spiderfyOnMaxZoom: true,
	showCoverageOnHover: false,
	zoomToBoundsOnClick: true,
	maxClusterRadius: {{.Map.ClusterRadius}}
});
var newUser = new L.LayerGroup();
var tilelayer = L.tileLayer(options.tileserver, {styleId: 22677, attribution: attribution});
var map = new L.Map('map', {
	center: options.center,
	zoom: options.zoom,
	maxZoom: 16,
	minZoom: 2,
	layers: [tilelayer, nodelayer, newUser]
});

var geolocControl = new L.control({
	position: 'topright'
});

var addNode = new L.control({
	position: 'topright'
});

var distance = new L.control({
	position: 'topright'
});

$(document).ready(function() {
	$.ajaxSetup({cache:true});
	
	geolocControl.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-geoloc" href="#" onclick="geoLocate(); return false;" title="My location"></a>';
		return div;
	};
	
	addNode.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-node" href="#me" data-toggle="modal" title="Add node"></a>';
		return div;
	};

	distance.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-distance" href="#distance" data-toggle="modal" title="Calculate distance"></a>';
		return div;
	};


	// Populate the map with nodes from /api/all.
	addNodes();
	
	map.addControl(geolocControl);
	map.addControl(addNode);
	map.addControl(distance);
	map.addControl(new L.Control.Scale());
	
	//map.locate({setView: true, maxZoom: 3});
});

$(window).resize(function () {
	$('#map').css('height', ($(window).height()));
}).resize();


// GeoLocation Control
function geoLocate() {
	map.locate({setView: true});
}

function geoLocate() {
	map.locate({setView: true, maxZoom: 17});
}

function initRegistration() {
	map.addEventListener('click', onMapClick);
	$('#map').css('cursor', 'crosshair');
	return false;
}

function cancelRegistration() {
	newUser.clearLayers();
	$('#map').css('cursor', '');
	map.removeEventListener('click', onMapClick);
}

function addNodes() {
	$.getJSON("/api/all?geojson", function (response) {
		// TODO: Check for errors here (response.error)
		L.geoJson(response.data, {
			pointToLayer: function(feature, latlng) {
				return L.marker(latlng, {icon: activeNodeIcon});
			},
			onEachFeature: onEachNode
		}).addTo(nodelayer);
	});
}

function onEachNode(feature, layer) {
	// If the Feature properties include popupContent, display it.
	if (feature.properties) {
		var html =  '<h4>'+feature.properties.OwnerName+'</h4>'+
					'<div class="btn btn-small">'+feature.id+'</div>'
		
		
		layer.bindPopup(html);
	}
}

function insertUser() {
	$("#loading-mask").show();
	$("#loading").show();
	
	var address = $("#address").val();
	var name = $("#name").val();
	var email = $("#email").val();
	var latitude = $("#latitude").val();
	var longitude = $("#longitude").val();

	if (name.length == 0) {
		alert("Name is required!");
		return false;
	}
	if (email.length == 0) {
		alert("Email is required!");
		return false;
	}
	
	var dataString = 'name='+ name + '&email=' + email + '&address=' + address + '&latitude=' + latitude + '&longitude=' + longitude;	
	$.ajax({
		type: "POST",
		url: "/api/node",
		data: dataString,
		success: function(response) {
			if (response.error == null) {
				cancelRegistration();
				nodelayer.clearLayers();
				addNodes();
				if (response.data == 'node registered')
					$('#insertSuccessModalNoVerify').modal('show');
				else
					$('#insertSuccessModal').modal('show');
			}
			$("#loading-mask").hide();
			$("#loading").hide();
		},
		error: function(data) {
			alert("Registration unsuccessful.");
			$("#loading-mask").hide();
			$("#loading").hide();
		}
	});
	return false;
}

function onMapClick(e) {
	var markerLocation = new L.LatLng(e.latlng.lat, e.latlng.lng);
	var marker = new L.Marker(markerLocation);
	newUser.clearLayers();
	newUser.addLayer(marker);
	var form =  '<form id="inputform" enctype="multipart/form-data" class="well">'+
		'<label><strong>Name:</strong> <i>marker title</i></label>'+
		'<input type="text" class="input-medium" placeholder="Required" id="name" name="name" />'+
		'<label><strong>Email:</strong> <i>never shared</i></label>'+
		'<input type="email" class="input-medium" placeholder="Required" id="email" name="email" />'+
		'<label><strong>IPv6:</strong></label>'+
		'<input type="text" class="input-medium" id="address" name="address" placeholder="Optional" />'+
		'<input style="display: none;" type="text" id="latitude" name="latitude" value="'+e.latlng.lat.toFixed(6)+'" />'+
		'<input style="display: none;" type="text" id="longitude" name="longitude" value="'+e.latlng.lng.toFixed(6)+'" /><br><br>'+
		'<div class="row-fluid">'+
		'<div class="span6" style="text-align:center;"><button type="button" class="btn btn-small" onclick="cancelRegistration()">Cancel</button></div>'+
		'<div class="span6" style="text-align:center;"><button type="button" class="btn btn-small btn-primary" onclick="insertUser()">Submit</button></div>'+
		'</div>'+
		'</form>';
	marker.bindPopup(form).openPopup();
}
