var options = {
	"tileserver": "{{.Map.Tileserver}}",
	"center": new L.LatLng({{.Map.Center.Latitude}},
						   {{.Map.Center.Longitude}}),
	"zoom": {{.Map.Zoom}}
}

var firstLoad = true;
var attribution = '<a href="https://github.com/ProjectMeshnet/nodeatlas">NodeAtlas {{.Version}}</a> â€” Map data {{.Map.Attribution}}';

var nodelayer = new L.MarkerClusterGroup({
	spiderfyOnMaxZoom: true,
	showCoverageOnHover: false,
	zoomToBoundsOnClick: true,
	maxClusterRadius: {{.Map.ClusterRadius}}
});

var newUser = new L.LayerGroup();
var tilelayer = L.tileLayer(options.tileserver, {styleId: 22677, attribution: attribution});

var map = new L.Map('map', {
	center: options.center,
	zoom: options.zoom,
	maxZoom: 16,
	minZoom: 2,
	layers: [tilelayer, nodelayer, newUser]
});

var geolocControl = new L.control({
	position: 'topright'
});

var addNode = new L.control({
	position: 'topright'
});

var distance = new L.control({
	position: 'topright'
});

$(document).ready(function() {
	
	$.ajaxSetup({cache:true});
	
	geolocControl.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-geoloc dis" onclick="geoLocate(); return false;" title="My location" id="locate"></a>';
		return div;
	};
	
	addNode.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-node dis" href="#me" data-toggle="modal" id="addme" title="Add node"></a>';
		return div;
	};

	distance.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-control');
		div.innerHTML = '<a class="leaflet-control-distance dis" onclick="initDistance();" id="distance" title="Calculate distance"></a>';
		return div;
	};

	// Populate the map with nodes from /api/all.
	addNodes();
	
	map.addControl(geolocControl);
	map.addControl(addNode);
	map.addControl(distance);
	map.addControl(new L.Control.Scale());
	
	//map.locate({setView: true, maxZoom: 3});
	
	initRightClick();
	
});

$(window).resize(function () {
	$('#map').css('height', ($(window).height()));
}).resize();

function geoLocate() {
	$('#locate').removeClass('dis');
	$('#locate').css('background-color', 'rgba(0, 0, 0, 1)');
	$('#locate').css('background-image', 'url(/res/img/location_white.png)');
	map.locate({setView: true, maxZoom: 17});
	map.on('locationfound', function() {
		$('#locate').css('background-color', 'rgba(255, 255, 255, .8)');
		$('#locate').css('background-image', 'url(/res/img/location.png)');
		$('#locate').addClass('dis');
		map.off('locationfound');
	});
}

function initRegistration() {
	$('#map').css('cursor', 'crosshair');
	$('#addme').removeClass('dis');
	$('#addme').css('background-color', 'rgba(0, 0, 0, 1)');
	$('#addme').css('background-image', 'url(/res/img/node_white.png)');
	map.addEventListener('click', onMapClick);
	return false;
}

function cancelRegistration() {
	newUser.clearLayers();
	$('#map').css('cursor', '');
	$('#addme').addClass('dis');
	$('#addme').css('background-color', 'rgba(255, 255, 255, .8)');
	$('#addme').css('background-image', 'url(/res/img/node.png)');
	map.removeEventListener('click', onMapClick);
}

function addNodes() {
	$.getJSON("/api/all?geojson", function (response) {
		// TODO: Check for errors here (response.error)
		L.geoJson(response.data, {
			pointToLayer: createMarker
		}).addTo(nodelayer);
	});
}

function createMarker(feature, latlng) {
	var html =  '<h4>'+feature.properties.OwnerName+'</h4>'+
				'<a href="/?node='+feature.id+'" class="btn btn-small">'+feature.id+'</a>';
	
	var p = L.popup();
	p.setLatLng(latlng);
	p.setContent(html);

	// Use the status to set an appropriate icon and effects.
	var icon = inactiveNodeIcon;
	if (feature.properties.Status & STATUS_ACTIVE > 0) {
		icon = activeNodeIcon;
	}
	
	// Create the Marker with options set above.
	var m = L.marker(latlng, {icon: icon}).bindPopup(html);
	m.on('contextmenu', onNode);
	
	// If we specify a node, center the map on it
	if (feature.id == getParameterByName('node')) {
		map.setView(latlng, 8);
		p.openOn(map);
	}
	return m;
}

function insertUser() {
	var address = $("#address").val();
	var name = $("#name").val();
	var email = $("#email").val();
	var details = $("#details").val();
	
	var pgp = $("#pgp").val();
	var contact = $("#contact").val();
	
	// ^[a-zA-Z0-9]{8}{0,2}$
	// TODO ^ USE REGEX TO CHECK PGP
	
	var latitude = $("#latitude").val();
	var longitude = $("#longitude").val();
	
	var active = 0, residential = 0, internet = 0, wireless = 0, wired = 0;
	
	if ($("#active").is(':checked')) {
		active = STATUS_ACTIVE;
	}
	
	if ($("#residential").is(':checked')) {
		residential = STATUS_PHYSICAL;
	}
	
	if ($("#internet").is(':checked')) {
		internet = STATUS_INTERNET;
	}
	
	if ($("#wireless").is(':checked')) {
		wireless = STATUS_INTERNET;
	}
	
	if ($("#wired").is(':checked')) {
		wired = STATUS_WIRED;
	}
	
	var status = active|residential|internet|wireless|wired;

	if (name.length == 0) {
		alert("Name is required!");
		return false;
	}
	
	if (email.length == 0) {
		alert("Email is required!");
		return false;
	}
	
	var dataString = 'name=' + name + '&email=' + email + '&address=' + 
	    address + '&latitude=' + latitude + '&longitude=' + longitude + 
		'&status=' + status + '&contact=' + contact + "&pgp=" + pgp;
	
	$.ajax({
		type: "POST",
		url: "/api/node",
		data: dataString,
		success: function(response) {
			if (response.error == null) {
				cancelRegistration();
				nodelayer.clearLayers();
				addNodes();
				if (response.data == 'node registered')
					$('#insertSuccessModalNoVerify').modal('show');
				else
					$('#insertSuccessModal').modal('show');
			} else {
				if (response.error == 'addressInvalid') {
					alert("Unable to create node; the address you have entered is invalid.");
				} else {
					alert("Unable to create node: " + response.error);
				}
			}
		},
		error: function(data) {
			alert("Something went wrong! If you try again, it might work. If it doesn't, contact the admin!");
			$("#loading-mask").hide();
			$("#loading").hide();
		}
	});
	return false;
}

function onMapClick(e) {
	var markerLocation = new L.LatLng(e.latlng.lat, e.latlng.lng);
	var marker = new L.Marker(markerLocation, {icon: newUserIcon});
	newUser.clearLayers();
	newUser.addLayer(marker);
	marker.bindPopup(getForm(e)).openPopup();
}

function getForm(e) {
	var form =  '<form id="inputform" enctype="multipart/form-data">';
	form += '<div class="tabby">';
		form += '<div class="tab" id="one">';
			form += '<label><strong>Name</strong> <span class="desc">Marker title</span></label>';
			form += '<input type="text" class="input-medium" placeholder="Required" id="name" name="name" />';
			form += '<label><strong>Email</strong> <span class="desc">Never shared</span></label>';
			form += '<input type="email" class="input-medium" placeholder="Required" id="email" name="email" />';
			form += '<label><strong>Address</strong> <span class="desc">Network-specific IP</span></label>';
			form += '<input type="text" class="input-medium" id="address" name="address" placeholder="Required" />';
			form += '<label><strong>Details</strong></label>';
			form += '<input type="text" class="input-medium" placeholder="Home, Work, ..." id="details"/>';
			form += '<br/><div class="row-fluid"><div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small" href="#" onclick="cancelRegistration(); return false;">Cancel</button></div>';
			form += '<div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(2); return false;">Next</button></div></div>';
		form += '</div>';
		form += '<div class="tab" id="two">';
			form += '<label><strong>Status</strong> <span class="desc">Check all that apply.</span></label>';
			form += '<div class="checkbox">';
				form += '<label>';
					form += '<input type="checkbox" id="active">';
					form += 'Active node';
				form += '</label>';
				form += '<label>';
					form += '<input type="checkbox" id="residential">';
					form += 'Residential node';
				form += '</label>';
			form += '</div>';
			form += '<div class="row-fluid"><div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(1); return false;">Back</button></div>';
			form += '<div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(3); return false;">Next</button></div></div>';
		form += '</div>';
		form += '<div class="tab" id="three">';
			form += '<label><strong>Status</strong> <span class="desc">Check all that apply.</span></label>';
			form += '<div class="checkbox">';
				form += '<label>';
					form += '<input type="checkbox" id="internet">';
					form += 'Internet access';
				form += '</label>';
				form += '<label>';
					form += '<input type="checkbox" id="wireless">';
					form += 'Wireless access';
				form += '</label>';
				form += '<label>';
					form += '<input type="checkbox" id="wired">';
					form += 'Wired (eth) access';
				form += '</label>';
			form += '</div>';
			form += '<div class="row-fluid"><div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(2); return false;">Back</button></div>';
			form += '<div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(4); return false;">Next</button></div></div>';
		form += '</div>';
		form += '<div class="tab" id="four">';
			form += '<label><strong>PGP</strong> <span class="desc">8 digit or 16 digit</span></label>';
			form += '<input type="text" class="input-medium" placeholder="CAFEBABE" id="pgp" name="pgp" />';
			form += '<label><strong>Contact</strong></label>';
			form += '<textarea class="contact" placeholder="XMPP username, Reddit username, ..." maxlength="255"></textarea>';
			form += '<input style="display: none;" type="text" id="latitude" name="latitude" value="'+e.latlng.lat.toFixed(6)+'"/>';
			form += '<input style="display: none;" type="text" id="longitude" name="longitude" value="'+e.latlng.lng.toFixed(6)+'"/>';
			form += '<div class="row-fluid"><div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-primary" href="#" onclick="next(3); return false;">Back</button></div>';
			form += '<div class="span6" style="text-align:center;">';
			form += '<button class="btn btn-small btn-info" href="#" onclick="insertUser(); return false;">Submit</button></div></div>';
		form += '</div>';
	form += '</div>';
	form += '</form>';
	return form;
}

function getParameterByName(name) {
	name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
	var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
	results = regex.exec(location.search);
	return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

function next(which) {
	if (which == 1) {
		$('#one').css('display', 'block');
		$('#two').css('display', 'none');
		$('#three').css('display', 'none');
		$('#four').css('display', 'none');
	} else if (which == 2) {
		$('#one').css('display', 'none');
		$('#two').css('display', 'block');
		$('#three').css('display', 'none');
		$('#four').css('display', 'none');
	} else if (which == 3) {
		$('#one').css('display', 'none');
		$('#two').css('display', 'none');
		$('#three').css('display', 'block');
		$('#four').css('display', 'none');
	} else if (which == 4) {
		$('#one').css('display', 'none');
		$('#two').css('display', 'none');
		$('#three').css('display', 'none');
		$('#four').css('display', 'block');
	}
}
